# -*- coding: utf-8 -*-
from aiogram import Router, Bot, F
from aiogram.filters import StateFilter
from aiogram.types import Message, CallbackQuery

from tgbot.database import Settingsx, Positionx, Categoryx
from tgbot.keyboards.inline_user import user_support_finl
from tgbot.keyboards.inline_user_page import prod_item_position_swipe_fp
from tgbot.keyboards.reply_main import menu_frep
from tgbot.keyboards.inline_main_menu import start_menu_finl
from tgbot.data.config import get_admins
from tgbot.utils.const_functions import ded
from tgbot.utils.misc.bot_filters import IsBuy, IsRefill, IsWork
from tgbot.utils.misc.bot_models import FSM, ARS
from tgbot.utils.text_functions import position_open_user

# –ò–≥–Ω–æ—Ä-–∫–æ–ª–±—ç–∫–∏ –ø–æ–∫—É–ø–æ–∫
prohibit_buy = [
    "buy_category_swipe",
    "buy_category_open",
    "buy_position_swipe",
    "buy_position_open",
    "buy_item_open",
    "buy_item_confirm",
]

# –ò–≥–Ω–æ—Ä-–∫–æ–ª–±—ç–∫–∏ –ø–æ–ø–æ–ª–Ω–µ–Ω–∏–π
prohibit_refill = [
    "user_refill",
    "user_refill_method",
    "Pay:Cryptobot",
    "Pay:Yoomoney",
    "Pay:",
]

router = Router(name=__name__)

################################################################################
########################### –°–¢–ê–¢–£–° –¢–ï–•–ù–ò–ß–ï–°–ö–ò–• –†–ê–ë–û–¢ ###########################
# –§–∏–ª—å—Ç—Ä –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã - —Å–æ–æ–±—â–µ–Ω–∏–µ
@router.message(IsWork())
async def filter_work_message(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    get_settings = Settingsx.get()

    if get_settings.misc_support != "None":
        return await message.answer(
            "<b>‚õî –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö</b>",
            reply_markup=user_support_finl(get_settings.misc_support),
        )

    await message.answer("<b>‚õî –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö</b>")

# –§–∏–ª—å—Ç—Ä –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏–µ —Ä–∞–±–æ—Ç—ã - –∫–æ–ª–±—ç–∫
@router.callback_query(IsWork())
async def filter_work_callback(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    await call.answer("‚õî –ë–æ—Ç –Ω–∞—Ö–æ–¥–∏—Ç—Å—è –Ω–∞ —Ç–µ—Ö–Ω–∏—á–µ—Å–∫–∏—Ö —Ä–∞–±–æ—Ç–∞—Ö.", show_alert=True)

################################################################################
################################# –°–¢–ê–¢–£–° –ü–û–ö–£–ü–û–ö ###############################
# –§–∏–ª—å—Ç—Ä –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ - —Å–æ–æ–±—â–µ–Ω–∏–µ
@router.message(IsBuy(), F.text == "üéÅ –ö—É–ø–∏—Ç—å")
@router.message(IsBuy(), StateFilter("here_item_count"))
async def filter_buy_message(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    await message.answer("<b>‚õî –ü–æ–∫—É–ø–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã</b>")

# –§–∏–ª—å—Ç—Ä –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–∫—É–ø–æ–∫ - –∫–æ–ª–±—ç–∫
@router.callback_query(IsBuy(), F.data.startswith(tuple(prohibit_buy)))
async def filter_buy_callback(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    await call.answer("‚õî –ü–æ–∫—É–ø–∫–∏ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω—ã.", show_alert=True)

################################################################################
############################### –°–¢–ê–¢–£–° –ü–û–ü–û–õ–ù–ï–ù–ò–ô ##############################
# –§–∏–ª—å—Ç—Ä –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - —Å–æ–æ–±—â–µ–Ω–∏–µ
@router.message(IsRefill(), StateFilter("here_pay_amount"))
async def filter_refill_message(message: Message, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    await message.answer("<b>‚õî –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ</b>")

# –§–∏–ª—å—Ç—Ä –Ω–∞ –¥–æ—Å—Ç—É–ø–Ω–æ—Å—Ç—å –ø–æ–ø–æ–ª–Ω–µ–Ω–∏—è - –∫–æ–ª–±—ç–∫
@router.callback_query(IsRefill(), F.data.startswith(tuple(prohibit_refill)))
async def filter_refill_callback(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    await call.answer("‚õî –ü–æ–ø–æ–ª–Ω–µ–Ω–∏–µ –≤—Ä–µ–º–µ–Ω–Ω–æ –æ—Ç–∫–ª—é—á–µ–Ω–æ.", show_alert=True)

################################################################################
#################################### –ü–†–û–ß–ï–ï ####################################
# –û—Ç–∫—Ä—ã—Ç–∏–µ –≥–ª–∞–≤–Ω–æ–≥–æ –º–µ–Ω—é
@router.message(F.text.in_(("üîô –ì–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é", "/start")))
async def main_start(message: Message, bot: Bot, state: FSM, arSession: ARS):
    """Send main menu. Admins get reply keyboard, users get inline buttons."""
    await state.clear()

    if message.from_user.id in get_admins():
        await message.answer(
            ded("""
                *üêª Lebowski Store*
                *üî∏ –ï—Å–ª–∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –º–µ–Ω—é*
                *üî∏ –í–≤–µ–¥–∏—Ç–µ /start*
            """),
            reply_markup=menu_frep(message.from_user.id),
            parse_mode="MarkdownV2",
        )
        await message.answer(
            "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
            reply_markup=start_menu_finl(),
        )
    else:
        await message.answer(
            "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
            reply_markup=start_menu_finl(),
        )

# –û—Ç–∫—Ä—ã—Ç–∏–µ –¥–∏–ø–ª–∏–Ω–∫–æ–≤
@router.message(F.text.startswith("/start "))
async def main_start_deeplink(message: Message, bot: Bot, state: FSM, arSession: ARS):
    deeplink_args = message.text[7:]

    if deeplink_args.startswith("p_"):
        position_id = deeplink_args[2:]
        get_position = Positionx.get(position_id=position_id)
        if get_position is not None:
            await position_open_user(bot, message.from_user.id, position_id, 0)

    elif deeplink_args.startswith("c_"):
        category_id = deeplink_args[2:]
        get_category = Categoryx.get(category_id=category_id)
        if get_category is not None:
            await message.answer(
                f"<b>üéÅ –¢–µ–∫—É—â–∞—è –∫–∞—Ç–µ–≥–æ—Ä–∏—è: <code>{get_category.category_name}</code></b>",
                reply_markup=prod_item_position_swipe_fp(0, category_id),
            )

# –í–æ–∑–≤—Ä–∞—Ç –≤ –≥–ª–∞–≤–Ω–æ–µ –º–µ–Ω—é —á–µ—Ä–µ–∑ –∫–æ–ª–±—ç–∫
@router.callback_query(F.data == "back_to_menu")
async def back_to_menu(call: CallbackQuery, bot: Bot, state: FSM, arSession: ARS):
    await state.clear()
    await call.message.delete()

    if call.from_user.id in get_admins():
        await call.message.answer(
            ded("""
                *üêª Lebowski Store*
                *üî∏ –ï—Å–ª–∏ –Ω–µ –ø–æ—è–≤–∏–ª–æ—Å—å –º–µ–Ω—é*
                *üî∏ –í–≤–µ–¥–∏—Ç–µ /start*
            """),
            reply_markup=menu_frep(call.from_user.id),
            parse_mode="MarkdownV2",
        )
        await call.message.answer(
            "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
            reply_markup=start_menu_finl(),
        )
    else:
        await call.message.answer(
            "<b>–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å! –í—ã–±–µ—Ä–∏—Ç–µ –¥–µ–π—Å—Ç–≤–∏–µ:</b>",
            reply_markup=start_menu_finl(),
        )
